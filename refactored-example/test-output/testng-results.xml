<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1166" started-at="2013-09-10T19:20:00Z" finished-at="2013-09-10T19:20:01Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1166" started-at="2013-09-10T19:20:00Z" finished-at="2013-09-10T19:20:01Z">
      <class name="com.ge.dsp.event.subscriber.core.impl.listener.WhenPersistingUserEventEntities">
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenPersistingUserEventEntities@29abc69]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenPersistingUserEventEntities@29abc69]" name="beforePowerMockTestClass" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="noExceptionIsThrown()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenPersistingUserEventEntities@29abc69]" name="noExceptionIsThrown" duration-ms="6" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noExceptionIsThrown -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenPersistingUserEventEntities@29abc69]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenPersistingUserEventEntities@29abc69]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ge.dsp.event.subscriber.core.impl.listener.WhenPersistingUserEventEntities -->
      <class name="com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="setUp" is-config="true" duration-ms="335" started-at="2013-09-10T15:20:00Z" finished-at="2013-09-10T15:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenPersistingUserEventEntities@29abc69]" name="setUp" is-config="true" duration-ms="213" started-at="2013-09-10T15:20:00Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="setUp" is-config="true" duration-ms="9" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="beforePowerMockTestClass" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="canHandle_NonNull_EventCallback()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="canHandle_NonNull_EventCallback" duration-ms="2" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canHandle_NonNull_EventCallback -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="canHandle_NullMessageEvent()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="canHandle_NullMessageEvent" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canHandle_NullMessageEvent -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="emailNotification_WithNullEventCallBack_isCreatedProperly()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="emailNotification_WithNullEventCallBack_isCreatedProperly" duration-ms="112" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emailNotification_WithNullEventCallBack_isCreatedProperly -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="httpNotification_WithNullEventCallBack_isCreatedProperly()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="httpNotification_WithNullEventCallBack_isCreatedProperly" duration-ms="39" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- httpNotification_WithNullEventCallBack_isCreatedProperly -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents@172fb0af]" name="afterPowerMockTestClass" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ge.dsp.event.subscriber.core.impl.listener.WhenHandlingMessageEvents -->
      <class name="com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="beforePowerMockTestClass" is-config="true" duration-ms="3" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="beforePowerMockTestMethod" is-config="true" duration-ms="10" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="correctPreferenceList_WithContext_returnsPreferenceEntity_WithContext()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="correctPreferenceList_WithContext_returnsPreferenceEntity_WithContext" duration-ms="386" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctPreferenceList_WithContext_returnsPreferenceEntity_WithContext -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="afterPowerMockTestMethod" is-config="true" duration-ms="3" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="jsonWithoutSubscriptionInformation_Returns_EmptyPreferenceEntitiesList()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="jsonWithoutSubscriptionInformation_Returns_EmptyPreferenceEntitiesList" duration-ms="16" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jsonWithoutSubscriptionInformation_Returns_EmptyPreferenceEntitiesList -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="nullUserPreferenceList_ReturnsNullPreferenceEntitiesList()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="nullUserPreferenceList_ReturnsNullPreferenceEntitiesList" duration-ms="2" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullUserPreferenceList_ReturnsNullPreferenceEntitiesList -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="preferenceListWithNullJasonFlag_returnsEmptyUserPreferenceEntitiesList()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="preferenceListWithNullJasonFlag_returnsEmptyUserPreferenceEntitiesList" duration-ms="3" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preferenceListWithNullJasonFlag_returnsEmptyUserPreferenceEntitiesList -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences@382f8116]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2013-09-10T15:20:01Z" finished-at="2013-09-10T15:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ge.dsp.event.subscriber.core.impl.listener.WhenRetrievingSubscriberPreferences -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
